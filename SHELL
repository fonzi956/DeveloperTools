
What you can do in terminal shell workshop.

What do you think is going on when you run this command:
echo $COLUMNS x $LINES

        The shell is telling me how big my terminal is.


Which of these commands would list the contents of the Pictures directory?
Mark all that are correct.

        ls Pictures

        cd Pictures; ls

        ls Pictures/../Pictures


Current working directory (pwd)



Which pieces of information can you find out from ls -l? You may want to do some research to answer this question; use your favorite search engine.

        The name of each listed file or directory.

        The date and time that a file was last modified.

        The size of a file, in bytes.



If you wanted to list all the files whose names start with the word bear, how would you do it?

        ls bear*



Let's say I change my mind and want to move the epub files back from Documents/Books to Documents.
How can I do this? My current working directory is my home directory, and Documents is inside that directory.
Mark each answer that would work:

        mv 'Documents/Books'/* Documents

        cd Documents; mv 'Books'/*.epub .

        cd 'Documents/Books'; mv * ..



By the way, when you quote something in the shell, you always use straight quotes.
This is what you'll get if you type into a terminal window. However, if you copy and paste from a web page or document,
you should be really careful to make sure that it hasn't accidentally been written with “curly quotes”. Curly quotes will not work in the shell.

Single quotes and double quotes do slightly different things in the shell. If you're unsure which to use, go for single quotes.







Download `dictionary.txt`

Enter a shell command to download https://tinyurl.com/zeyq9vc and save it as the file dictionary.txt. Remember to use the option to follow web redirects.

Run this command on your own computer, too! You'll need to download this file for the next exercise.

      curl -o dictionary.txt -L 'https://tinyurl.com/zeyq9vc'


By the way, a lot of URLs have special characters in them, such as the & sign, which have unusual meanings to the shell.
That's why I'm always putting these URLs in quotes … even though these particular examples would work without them, it's a good practice to get into.





Viewing files (cat, less) Using the dictionary.txt file and the less command, find out the next word after the word goobers in this dictionary.

use / once in the cat or less command to find a word so ex: to find pie within a file type '/pie'




Removing things (rm, rmdir) You have four files named:

    Good File
    Bad Name Good File
    Bad File
    Good Name Bad Face

You want to remove files 3 and 4, while leaving 1 and 2 intact. There are two commands below that will accomplish this goal. Choose them:

    rm 'Bad File' 'Good Name Bad Face'

    rm *'Bad F'*




Searching and pipes (grep, wc) Looking for `ibo`

How many words are there in dictionary.txt that match the pattern ibo?
22

What are grep patterns called?

Research question! You can use grep for more than just matching words. There's a specific term for the patterns that grep lets you use.

Use your favorite search engine and do a little research to find out what those patterns are called.
regular expression






Do you think the PWD variable is a shell variable or an environment variable?

(Don't know what it is? Try echo $PWD.)

    Environment variable



Write a shell command using echo that displays the contents of the variables LOGNAME and PWD with a space between them.

    echo $LOGNAME $PWD



Startup files (.bash_profile) and Controlling the shell prompt ($PS1)
